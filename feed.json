{"title":"Life's A Struggle","description":null,"language":"zh-Hans","link":"http://kalin.club","pubDate":"Fri, 31 Mar 2017 07:00:33 GMT","lastBuildDate":"Sat, 01 Apr 2017 19:39:17 GMT","generator":"hexo-generator-json-feed","webMaster":"Kalin","items":[{"title":"Hexo博客搭建全纪录","link":"http://kalin.club/2017/03/31/Hexo博客搭建全纪录/","description":"零、了解搭建博客的流程在开始之前我们要知道整个博客的一个搭建过程：一、搭建本地博客；在电脑上安装Git和Node.js，安装Hexo博客框架；二、部署远程博客；注册Github账号，然后在上面创建一个Repository，简单配置一下，博客的基本框架就建立好了。至于搭建好了怎么写博客，简单学习一下Markdown语法就好。既然已经了解搭建的流程，那么现在就开始进入实际的操作。 一、搭建本地博客下面讲怎么在Mac下的搭建方法，其他操作系统可能不太一样，不过也大同小异啦。这里使用了macOS缺失的软件包管理器Homebrew进行安装，下面是安装过程：1.安装Homebrew1$ /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" brew常用命令：brew -h #查看brew帮助brew -v #查看brew的版本号brew search 应用名称 #查找应用brew update #更新brewbrew list #列出已安装的软件brew home #用浏览器打开brew的官方网站brew info 应用名称 #显示应用信息brew deps #显示包依赖brew install 应用名称 #安装应用brew uninstall 应用名称 #卸载应用 2.安装Git （前提是安装Homebrew之后）1$ brew install git #安装git 3.安装Node.js （这里使用nvm一款Node.js版本管理器进行管理）123456789101112131415$ brew install nvm #安装nvm#安装完成后就可以在shell中可以使用nvm命令#如果没有.bash_profile文件需要自行touch .bash_profile创建.bash_profile文件$ cd ~ #到根目录下$ open .bash_profile #打开.bash_profile文件#然后添加以下命令： export NVM_DIR=~/.nvm source $(brew --prefix nvm)/nvm.sh#然后重新source$ source .bash_profile #刷新.bash_profile文件#使用nvm安装node.js$ nvm install &lt;version&gt; #安装&lt;version&gt;版本的node.js#完成安装$ node -v #查看当前node.js版本号$ npm -v #查看当前nmp版本号 nvm常用命令：nvm ls-remote #查看 所有的node可用版本nvm install xxx #下载你想要的版本nvm use xxx #使用指定版本的nodenvm alias default xxx #每次启动终端都使用该版本的nodenvm current #显示当前使用的node版本号nvm install stable #安装最新稳定版 node 4.安装Hexo博客框架1234567$ npm --registry https://registry.npm.taobao.org #切换到npm国内镜像$ npm install hexo-cli -g #安装hexo$ hexo init &lt;folder&gt; #初始化&lt;folder&gt;$ cd &lt;folder&gt; #到&lt;folder&gt;目录下$ npm install #安装依赖包$ hexo generate(hexo g) #生成静态页面$ hexo server(hexo s) #本地启动 通过以上步骤的安装命令之后，本地博客就算搭建好了，在浏览器地址栏中输入http://localhost:4000/就可以查看本地的博客了。 二、远程部署博客1.注册Github账号因为是托管到GitHub上，所以第一步需要注册一个账号。已有账号的自行忽略。2.建立和github用户名对应的仓库仓库名&lt;username&gt;.github.io必须是这个结构，不能有一点偏差。3.配置SSH公钥如果你电脑上以前用过git往GitHub上传过代码，并且配置的用户名和你GitHub账号一致，那么你的GitHub就算没有设置SSH，也可以上传成功，只需要把Hexo的配置文件配置为http方式上传文件。1234#方法一：下载GitHub的客户端(https://desktop.github.com)然后输入你的用户名，会自动配置好SSH。#方法二：$ ssh-keygen #生成SSH 敲三次回车，既可以生成id_rsa.pub文件，这里面就是SSH key的内容。打开这个文件拷贝里面的内容。打开你的GitHub，点击Settings。点击左边的SSH and GPG keys然后New SSH key，把id_rsa.pub文件里内容添加进去就好了。Title随便填写即可，把拷贝的内容粘贴到Key里面就配置好了。最后判断SSH是否配置好1$ ssh -T git@github.com #判断SSH是否配置好 出现Hi &lt;username&gt;! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 恭喜你已经配置好了SSH。4.部署远程博客打开Hexo目录下的_config.yml，拉倒最下面配置为这样子,只需要把&lt;username&gt;改为你自己的GitHub用户名就可以了。下面的配置需要注意空格，还有一定要是https，不能为http，不然会报错。123456# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git branch: master 保存。cd到Hexo的根目录，依次执行下面的命令123$ hexo clean #清除缓存文件$ hexo g #启动服务预览$ hexo d #远程部署 如出现错误：ERROR Deployer not found: git请运行命令：$ npm install hexo-deployer-git --save安装hexo git后，再次运行hexo d就可以解决。部署时可能会让你输入git的用户名和密码，直接输入即可。部署完成后出现：INFO Deploy done: git说明已经部署成功了。在浏览器地址栏中输入http://&lt;username&gt;.github.io/可以访问自己的博客了。至此基本的Hexo博客就搭建好了。 hexo常用命令：基本npm install hexo -g #安装npm update hexo -g #升级hexo init #初始化服务器hexo server #hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义IPhexo clean #清除缓存文件hexo generate #生成静态页面hexo deploy #开始部署监视文件变动hexo generate –watch #监视文件变动模版hexo new “博客标题” #新建博文hexo new page “pageName” #新建页面简写hexo n “博客标题” == hexo new “博客标题” #新建博文hexo g == hexo generate #生成静态页面hexo s == hexo server #启动服务预览hexo d == hexo deploy #远程部署组合命令hexo s -g == hexo g + hexo shexo d -g == hexo g + hexo d -End-","pubDate":"Fri, 31 Mar 2017 07:00:33 GMT","guid":"http://kalin.club/2017/03/31/Hexo博客搭建全纪录/","category":"hexo"}]}
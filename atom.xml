<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Life&#39;s A Struggle</title>
  <subtitle>成长或负隅顽抗 有轮廓明如灯指向生命传承</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kalin.club/"/>
  <updated>2017-04-01T10:00:41.000Z</updated>
  <id>http://kalin.club/</id>
  
  <author>
    <name>Kalin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客搭建全纪录</title>
    <link href="http://kalin.club/2017/03/31/hi-hexo/"/>
    <id>http://kalin.club/2017/03/31/hi-hexo/</id>
    <published>2017-03-31T07:00:33.000Z</published>
    <updated>2017-04-01T10:00:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="零、了解搭建博客的构架"><a href="#零、了解搭建博客的构架" class="headerlink" title="零、了解搭建博客的构架"></a>零、了解搭建博客的构架</h3><p>在开始之前我们要知道整个博客的一个搭建过程：<br>第一步，搭建本地博客；在电脑上安装<a href="https://git-scm.com/" target="_blank" rel="external">Git</a>和<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>两个程序，利用简单的命令安装好<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>；<br>第二步，部署远程博客；注册一个<a href="https://github.com/" target="_blank" rel="external">Github</a>账号，然后在上面创建一个Repository，简单配置一下，博客的基本框架就建立好了。<br>至于搭建好了怎么写博客，是这样的，如果你懂一点Markdown语法就更好了，可以让你专心写作而不必在意格式，显示出来的效果非常漂亮。不懂的也不要紧，花个十来分钟就可以上手。<br>说完了在Hexo上搭建博客的一个思路，现在开始进入实际的操作。<br><a id="more"></a></p>
<h3 id="一、搭建本地博客"><a href="#一、搭建本地博客" class="headerlink" title="一、搭建本地博客"></a>一、搭建本地博客</h3><p>下面讲怎么在Mac下的搭建方法，其他操作系统可能不太一样，不过也大同小异啦。这里使用了macOS缺失的软件包管理器<a href="https://brew.sh/index_zh-cn.html/" target="_blank" rel="external">Homebrew</a>进行安装，下面是安装过程：<br><strong>1.安装<a href="https://brew.sh/index_zh-cn.html/" target="_blank" rel="external">Homebrew</a></strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /usr/bin/ruby <span class="_">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>brew常用命令：<br>brew -h    #查看brew帮助<br>brew -v    #查看brew的版本号<br>brew search 应用名称    #查找应用<br>brew update    #更新brew<br>brew list    #列出已安装的软件<br>brew home    #用浏览器打开brew的官方网站<br>brew info 应用名称    #显示应用信息<br>brew deps    #显示包依赖<br>brew install 应用名称    #安装应用<br>brew uninstall 应用名称    #卸载应用 </p>
</blockquote>
<p><strong>2.安装<a href="https://git-scm.com/" target="_blank" rel="external">Git</a></strong> （前提是安装<a href="https://brew.sh/index_zh-cn.html/" target="_blank" rel="external">Homebrew</a>之后）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install git <span class="comment">#安装git</span></div></pre></td></tr></table></figure></p>
<p><strong>3.安装<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a></strong> （这里使用<a href="https://github.com/creationix/nvm/" target="_blank" rel="external">nvm</a>一款<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>版本管理器进行管理）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ brew install nvm <span class="comment">#安装nvm</span></div><div class="line"><span class="comment">#安装完成后就可以在shell中可以使用nvm命令</span></div><div class="line"><span class="comment">#如果没有.bash_profile文件需要自行touch .bash_profile创建.bash_profile文件</span></div><div class="line">$ <span class="built_in">cd</span> ~ <span class="comment">#到根目录下</span></div><div class="line">$ open .bash_profile <span class="comment">#打开.bash_profile文件</span></div><div class="line"><span class="comment">#然后添加以下命令：</span></div><div class="line"> <span class="built_in">export</span> NVM_DIR=~/.nvm</div><div class="line"> <span class="built_in">source</span> $(brew --prefix nvm)/nvm.sh</div><div class="line"><span class="comment">#然后重新source</span></div><div class="line">$ <span class="built_in">source</span> .bash_profile <span class="comment">#刷新.bash_profile文件</span></div><div class="line"><span class="comment">#使用nvm安装node.js</span></div><div class="line">$ nvm install &lt;version&gt; <span class="comment">#安装&lt;version&gt;版本的node.js</span></div><div class="line"><span class="comment">#完成安装</span></div><div class="line">$ node -v <span class="comment">#查看当前node.js版本号</span></div><div class="line">$ npm -v <span class="comment">#查看当前nmp版本号</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>nvm常用命令：<br>nvm ls-remote #查看 所有的node可用版本<br>nvm install xxx #下载你想要的版本<br>nvm use xxx #使用指定版本的node<br>nvm alias default xxx #每次启动终端都使用该版本的node<br>nvm current #显示当前使用的node版本号<br>nvm install stable #安装最新稳定版 node</p>
</blockquote>
<p><strong>4.安装<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a></strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ npm --registry https://registry.npm.taobao.org <span class="comment">#切换到npm国内镜像</span></div><div class="line">$ npm install hexo-cli -g <span class="comment">#安装hexo</span></div><div class="line">$ hexo init &lt;folder&gt; <span class="comment">#初始化&lt;folder&gt;</span></div><div class="line">$ <span class="built_in">cd</span> &lt;folder&gt; <span class="comment">#到&lt;folder&gt;目录下</span></div><div class="line">$ npm install <span class="comment">#安装依赖包</span></div><div class="line">$ hexo generate(hexo g) <span class="comment">#生成静态页面</span></div><div class="line">$ hexo server(hexo s) <span class="comment">#本地启动</span></div></pre></td></tr></table></figure></p>
<p>通过以上步骤的安装命令之后，本地博客就算搭建好了，然后在浏览器地址栏中输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>可以查看本地的博客了。</p>
<blockquote>
<p>hexo常用命令：<br>npm install hexo -g #安装<br>npm update hexo -g #升级<br>hexo init #初始化<br>hexo generate(hexo g) #生成静态页面<br>hexo server(hexo s) #本地启动<br>hexo clean #清除缓存文件<br><em>简写</em><br>hexo n “我的博客标题” == hexo new “我的博客标题” #新建文章<br>hexo p == hexo publish<br>hexo g == hexo generate        #生成<br>hexo s == hexo server    #启动服务预览<br>hexo d == hexo deploy    #部署</p>
</blockquote>
<h3 id="二、远程部署博客"><a href="#二、远程部署博客" class="headerlink" title="二、远程部署博客"></a>二、远程部署博客</h3><p><strong>1.注册<a href="https://github.com/" target="_blank" rel="external">Github</a>账号</strong><br>因为是托管到Github上，所以第一步需要注册一个账号。已有账号的自行忽略。注册的过程比较简单，这里不做赘述。<br><strong>2.建立和github用户名对应的仓库</strong><br>仓库名须是<code>username.github.io</code>，否则可能就不成功。<br><strong>3.配置SSH公钥</strong><br>如果你电脑上以前用过git往github上传过代码，并且配置的用户名和你github账号一致，那么你的github就算没有设置SSH，也可以上传成功，只需要把Hexo的配置文件配置为HTTP方式上传文章。<br>如果你配置上传的账号和github账号不同，那么你可以把这个账号添加到你博客仓库的Collaborators上面，也可以上传文章。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#方法一：</span></div><div class="line">下载github的客户端(https://desktop.github.com)然后输入你的用户名，会自动配置好SSH。</div><div class="line"><span class="comment">#方法二：</span></div><div class="line">$ ssh-keygen <span class="comment">#生成SSH</span></div></pre></td></tr></table></figure></p>
<p>敲三次回车，既可以生成<code>id_rsa.pub</code>文件，这里面就是SSH key的内容。打开这个文件拷贝里面的内容。<br>打开你的github，点击Setting。点击左边SSH keys，点击右边Add SSH。然后把复制的内容粘贴到下面那个框里面，title随便自己写。过程可能会让你输入一次密码，输入即可，配置好就行了。最后判断SSH是否配置好<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com <span class="comment">#判断SSH是否配置好</span></div></pre></td></tr></table></figure></p>
<p>出现<code>Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 恭喜你已经配置好了SSH。<br><strong>4.部署远程博客</strong><br>打开Hexo目录下的_config.yml，拉倒最下面<br>配置为这样子,只需要把codertian改为你自己的github用户名就可以了。<br>这种提交方式是使用http方式提交的，我个人测试的是不需要配置SSH也可以提交。<br>下面的配置大家要注意空格，复制我的更改即可，记住一定要是https，不能为http，不然会报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: http://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/username/username.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>保存，cd到Hexo的根目录，依次执行下面的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo g</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;零、了解搭建博客的构架&quot;&gt;&lt;a href=&quot;#零、了解搭建博客的构架&quot; class=&quot;headerlink&quot; title=&quot;零、了解搭建博客的构架&quot;&gt;&lt;/a&gt;零、了解搭建博客的构架&lt;/h3&gt;&lt;p&gt;在开始之前我们要知道整个博客的一个搭建过程：&lt;br&gt;第一步，搭建本地博客；在电脑上安装&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;和&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;两个程序，利用简单的命令安装好&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt;；&lt;br&gt;第二步，部署远程博客；注册一个&lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;账号，然后在上面创建一个Repository，简单配置一下，博客的基本框架就建立好了。&lt;br&gt;至于搭建好了怎么写博客，是这样的，如果你懂一点Markdown语法就更好了，可以让你专心写作而不必在意格式，显示出来的效果非常漂亮。不懂的也不要紧，花个十来分钟就可以上手。&lt;br&gt;说完了在Hexo上搭建博客的一个思路，现在开始进入实际的操作。&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://kalin.club/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://kalin.club/tags/hexo/"/>
    
  </entry>
  
</feed>
